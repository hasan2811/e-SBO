rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read their own profile, and can update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for top-level collections (private & public items)
    match /{itemType}/{itemId} {
      // Public items can be read by anyone.
      // Private items can only be read by the owner.
      // `itemType` is a wildcard for observations, inspections, ptws
      allow read: if resource.data.scope == 'public' || 
                     (request.auth != null && request.auth.uid == resource.data.userId);

      // Authenticated users can create items and must be the owner.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Only the owner of an item can update or delete it.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Rules for Projects and their subcollections
    match /projects/{projectId} {
      // Members can read project details
      allow read: if request.auth != null && request.auth.uid in resource.data.memberUids;

      // Logged-in users can create projects, and must set themselves as owner & member.
      allow create: if request.auth != null && 
                       request.auth.uid == request.resource.data.ownerUid &&
                       request.auth.uid in request.resource.data.memberUids;

      // Only the owner can update the project (e.g., add members later)
      allow update: if request.auth != null && request.auth.uid == resource.data.ownerUid;
      
      // Only the owner can delete the project
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerUid;

      // Rules for items inside a project's subcollection
      match /{itemType}/{itemId} {
        // Members of the project can read all items within it.
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
        
        // Members of the project can create items, and must be the owner of the item.
        allow create: if request.auth != null && 
                         (request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids) &&
                         request.auth.uid == request.resource.data.userId;

        // Only the user who created the item OR the project owner can update/delete it.
        allow update, delete: if request.auth != null && 
                               (request.auth.uid == resource.data.userId || 
                                request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerUid);
      }
    }
  }
}
