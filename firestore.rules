rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Anyone can read user profiles (for displaying names, etc.)
    // - Only the user themselves can update their own profile.
    // - User documents cannot be created or deleted from the client.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
      allow create, delete: if false; 
    }

    // Projects Collection
    // - Any authenticated user can query the collection (list).
    //   Security is enforced by the client query and the 'read' rule.
    // - Users can only read a specific project if they are a member.
    // - Any authenticated user can create a new project.
    // - Only the owner can update or delete a project.
    match /projects/{projectId} {
      allow list, create: if request.auth != null;
      allow read, update, delete: if request.auth.uid == resource.data.ownerUid
                                  || request.auth.uid in resource.data.memberUids;

      // Sub-collections within a project
      // - Only project members can access sub-collections.
      match /{collectionId}/{docId} {
        allow read, list, create, update, delete: if get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids.hasAny([request.auth.uid]);
      }
    }

    // Root-level collections for Private/Public data
    // - Users can only manage their own private documents.
    // - Anyone can read public documents.
    match /{collectionId}/{docId} {
      // Handle private documents (observations, inspections, ptws)
      allow read, list, create, update, delete: if resource.data.userId == request.auth.uid;
      
      // Handle public documents (observations)
      allow read, list: if resource.data.scope == 'public';
      // Allow creation of public docs via the sharing mechanism (server-action)
      allow create: if request.auth != null; 
    }
  }
}
