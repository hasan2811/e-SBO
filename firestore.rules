
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isProjectMember(projectId) {
      // Efficiently checks if the requesting user's UID is in the project's member list.
      // This rule structure is designed to work with 'array-contains' queries from the client.
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }

    // USER PROFILES
    // Allow any authenticated user to read profiles (needed for inviting members by email).
    // Allow users to update only their own profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow update: if isOwner(userId);
      allow create, delete: if false; // Disallow creating/deleting user docs directly
    }

    // PROJECTS
    // Allow read access if the user is a member.
    // Allow project creation if the user is the owner.
    // Only members can update project details (e.g., name, members).
    match /projects/{projectId} {
      allow read, update: if isProjectMember(projectId);
      allow create: if isOwner(request.resource.data.ownerUid);
      allow delete: if isOwner(resource.data.ownerUid); // Only owner can delete
    }
    
    // PROJECT SUBCOLLECTIONS (Observations, Inspections, PTWs inside a project)
    // Any project member can read/write to these subcollections.
    match /projects/{projectId}/{collection}/{docId} {
       allow read, write, create, delete: if isProjectMember(projectId);
    }

    // ROOT COLLECTIONS (Observations, Inspections, PTWs that are public or private)
    // Generic rule for all three root collections
    match /{collection}/{docId} where collection in ['observations', 'inspections', 'ptws'] {
      // Allow read if the document is public OR the user is the owner.
      allow read: if resource.data.scope == 'public' || isOwner(resource.data.userId);
      
      // Allow create if the user is the owner of the new document.
      allow create: if isOwner(request.resource.data.userId);
      
      // Allow updates/deletes only if the user is the owner.
      allow update, delete: if isOwner(resource.data.userId);
    }
  }
}
