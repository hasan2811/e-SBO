rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // --- User Profiles ---
    // Users can read/update their own profile. Any auth'd user can create one.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // --- Helper Functions ---
    function isOwner(item, uid) {
      return item.userId == uid;
    }
    
    function isPublic(item) {
      return item.scope == 'public';
    }

    // --- Rules for Top-Level Item Collections ---
    match /observations/{docId} {
      allow read: if isPublic(resource.data) || (request.auth != null && isOwner(resource.data, request.auth.uid));
      allow create: if request.auth != null && isOwner(request.resource.data, request.auth.uid);
      allow update, delete: if request.auth != null && isOwner(resource.data, request.auth.uid);
    }

    match /inspections/{docId} {
      allow read: if isPublic(resource.data) || (request.auth != null && isOwner(resource.data, request.auth.uid));
      allow create: if request.auth != null && isOwner(request.resource.data, request.auth.uid);
      allow update, delete: if request.auth != null && isOwner(resource.data, request.auth.uid);
    }

    match /ptws/{docId} {
      allow read: if isPublic(resource.data) || (request.auth != null && isOwner(resource.data, request.auth.uid));
      allow create: if request.auth != null && isOwner(request.resource.data, request.auth.uid);
      allow update, delete: if request.auth != null && isOwner(resource.data, request.auth.uid);
    }
    
    // --- Rules for Projects and Their Subcollections ---
    match /projects/{projectId} {
      // Members can read project details. Owner can update/delete. Any auth'd user can create.
      allow read: if request.auth != null && request.auth.uid in resource.data.memberUids;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerUid;
      allow create: if request.auth != null;

      // Members can read/write items inside a project's subcollections.
      match /{collectionName}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
      }
    }
  }
}
