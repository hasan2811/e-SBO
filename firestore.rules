
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // =================================
    // Helper Functions
    // =================================
    function isOwner(doc) {
      return request.auth.uid == doc.userId;
    }
    
    function isProjectMember(projectId) {
      // Allow access if the user's UID is in the project's memberUids list.
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }

    // =================================
    // User Profiles
    // =================================
    match /users/{userId} {
      // Anyone can read user profiles to get names, etc. for display.
      allow read;
      // A user can only write to their own profile.
      allow update: if request.auth.uid == userId;
      // Allow authenticated users to look up other users by email for project invites.
      allow list: if request.auth != null;
    }

    // =================================
    // Projects
    // =================================
    match /projects/{projectId} {
      // Users can read/write project details if they are a member.
      allow read, write: if isProjectMember(projectId);
      // A user can list projects they are a member of.
      allow list: if request.auth.uid in resource.data.memberUids;
      // A user can create a project if they are listed as the owner in the new document.
      allow create: if request.auth.uid == request.resource.data.ownerUid;
    }

    // =================================
    // Items in Project Subcollections (Observations, Inspections, PTWs)
    // =================================
    match /projects/{projectId}/{itemCollection}/{itemId} {
       // Allow full access to any member of the project.
       allow read, create, update, delete: if isProjectMember(projectId);
    }
    
    // =================================
    // Root Collections (Public or Private Items)
    // =================================
    match /{itemCollection}/{itemId} {
       // Allow anyone to read public items.
       // Allow owner to read their own private items.
       allow read: if resource.data.scope == 'public' || (resource.data.scope == 'private' && isOwner(resource.data));
       
       // Allow authenticated users to create items for themselves.
       // This fixes the critical bug where `isOwner()` was used incorrectly.
       allow create: if request.auth.uid == request.resource.data.userId;
       
       // Allow owner to update their own items.
       allow update: if isOwner(resource.data);
    }
  }
}
