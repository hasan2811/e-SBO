rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can manage their own profile.
    // Authenticated users can query the users collection to find others by email for invitations.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Projects can be read by members.
    // The owner can update/delete it.
    // An authenticated user can create a project and becomes the owner.
    match /projects/{projectId} {
      allow read: if request.auth.uid in resource.data.memberUids;
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.ownerUid;
      allow update, delete: if request.auth.uid == resource.data.ownerUid;
    }

    // Generic rules for collections that can be public, private, or project-scoped.
    match /{collectionName}/{docId} 
        where collectionName in ['observations', 'inspections', 'ptws'] {
          
      // Helper function to check for project membership.
      function isMember() {
        return request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids;
      }
      
      // Allow reads based on scope: public, user's own, or project member.
      allow read: if resource.data.scope == 'public'
                  || (request.auth != null && request.auth.uid == resource.data.userId)
                  || (resource.data.scope == 'project' && resource.data.projectId != null && isMember());

      // Allow creation if the user is the one submitting.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow updates from the owner or any project member for observations and PTWs.
      allow update: if (collectionName == 'observations' || collectionName == 'ptws')
                    && request.auth != null
                    && (request.auth.uid == resource.data.userId || (resource.data.scope == 'project' && resource.data.projectId != null && isMember()));
    }
  }
}
