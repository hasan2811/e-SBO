
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Function to check if a user is a member of a project.
    function isProjectMember(projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids.hasAny([request.auth.uid]);
    }

    // Users can read their own profile and update it.
    // Any authenticated user can see a user's basic info (for inviting to projects).
    match /users/{userId} {
      allow read, list: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Projects can be read by members.
    // Creation is allowed for any authenticated user.
    match /projects/{projectId} {
      allow read, update: if request.auth.uid in resource.data.memberUids;
      allow create: if request.auth != null;
      
      // Rules for sub-collections within a project
      match /{collection}/{docId} {
        allow read, write: if isProjectMember(projectId);
      }
    }
    
    // Generic rules for root-level item collections (observations, inspections, ptws)
    match /{collection}/{docId} {
      // Allow read if the item is public, or if the user is the owner of the item.
      allow read: if resource.data.scope == 'public' || (request.auth != null && request.auth.uid == resource.data.userId);
      
      // Allow create for any authenticated user.
      allow create: if request.auth != null;
      
      // Allow updates only by the user who created the item.
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Deletes are disallowed for now for data integrity.
      allow delete: if false;
    }
  }
}
