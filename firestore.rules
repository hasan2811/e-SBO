
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSuperAdmin() {
      return request.auth.uid == 'GzR8FeByeKhJ0vZoeo5Zj4M0Ftl2';
    }
    
    function isOwner(doc) {
      return 'ownerUid' in doc.data && request.auth.uid == doc.data.ownerUid;
    }
    
    function isMember(doc) {
      return 'memberUids' in doc.data && doc.data.memberUids is list && request.auth.uid in doc.data.memberUids;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Projects Collection
    match /projects/{projectId} {
      // LIST: Allow any signed-in user to query the collection.
      // The client-side query (`where('memberUids', 'array-contains', ...)` or isSuperAdmin) is responsible for filtering.
      // This rule is essential to prevent "permission-denied" on list requests.
      allow list: if isSignedIn();

      // GET: Stricter rule for reading a single document directly.
      // You can only get a project if you are a super admin or a member.
      allow get: if isSuperAdmin() || isMember(resource);
      
      // CREATE: Any signed-in user can create a project.
      allow create: if isSignedIn();
      
      // WRITE: Only the owner or a super admin can update/delete.
      allow update, delete: if isSuperAdmin() || isOwner(resource);
    }
    
    // Users Collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if request.auth.uid == userId;
    }
    
    // Root-level collections for items (Observations, Inspections, PTWs)
    match /{itemCollection}/{itemId} 
      where itemCollection in ['observations', 'inspections', 'ptws'] {
        
      // READ: Super admin can read all. Members of the associated project can read.
      // Public items can be read by anyone. Private items only by the owner.
      allow read: if isSuperAdmin() ||
                    (resource.data.scope == 'public') ||
                    (resource.data.scope == 'private' && request.auth.uid == resource.data.userId) ||
                    (resource.data.scope == 'project' && 
                      'projectId' in resource.data && resource.data.projectId != null &&
                      exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
                      (isMember(get(/databases/$(database)/documents/projects/$(resource.data.projectId))) || isSuperAdmin()));

      // CREATE: Any signed-in user can create an item.
      allow create: if isSignedIn();

      // UPDATE/DELETE: Super admin or the original creator can modify.
      allow update, delete: if isSuperAdmin() || (isSignedIn() && request.auth.uid == resource.data.userId);
    }
  }
}
