rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to identify the super admin
    function isSuperAdmin() {
      return request.auth.uid == 'GzR8FeByeKhJ0vZoeo5Zj4M0Ftl2';
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // Allow reading if the user is the super admin OR if their UID is in the project's 'memberUids' list.
      // This covers both listing multiple projects and getting a single one.
      allow read: if isSuperAdmin() || 
                    (resource.data.memberUids != null && request.auth.uid in resource.data.memberUids);
      
      // Allow writing (create, update, delete) if the user is the super admin OR the project's owner.
      allow write: if isSuperAdmin() || request.auth.uid == resource.data.ownerUid;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to manage their own profile, or the super admin to manage any profile.
      allow read, write: if isSuperAdmin() || request.auth.uid == userId;
    }

    // Generic rules for all other collections (observations, inspections, ptw)
    match /{collection}/{itemId} {
      // Allow reading if the item is public, user is super admin, it's their own private item,
      // or they are a member of the project the item belongs to.
      allow read: if resource.data.scope == 'public' ||
                    isSuperAdmin() ||
                    (resource.data.scope == 'private' && request.auth.uid == resource.data.userId) ||
                    (resource.data.scope == 'project' && 
                     get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids != null &&
                     request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids);

      // Allow creating an item if the user is the one submitting it.
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow updating if user is admin, the item's creator, or a project member.
      allow update: if isSuperAdmin() || 
                      request.auth.uid == resource.data.userId ||
                      (resource.data.scope == 'project' &&
                       get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids != null &&
                       request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids);
    }
  }
}
