
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Rules for Observations
    match /observations/{observationId} {
      // Allow any authenticated user to read public observations
      // or observations they own.
      allow read: if request.auth != null && (resource.data.scope == 'public' || request.auth.uid == resource.data.userId);
      
      // Allow any authenticated user to create an observation.
      allow create: if request.auth != null;
      
      // Only the owner can update or delete their observation.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Rules for Inspections. These are treated as public for now.
    match /inspections/{inspectionId} {
      // Allow any authenticated user to read or create.
      allow read, create: if request.auth != null;
      
      // Only the owner can update or delete.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Rules for PTWs
    match /ptws/{ptwId} {
      // Allow any authenticated user to read public PTWs
      // or PTWs they own.
      allow read: if request.auth != null && (resource.data.scope == 'public' || request.auth.uid == resource.data.userId);
      
      // Allow any authenticated user to create.
      allow create: if request.auth != null;
      
      // Only the owner can update or delete. (Approver rules can be added later).
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
