
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    // Correctly checks if the user's UID is in the project's memberUids array.
    function isProjectMember(projectId) {
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }

    // USER PROFILES
    match /users/{userId} {
      // Users can only read and update their own profile.
      allow read, update: if isSignedIn() && request.auth.uid == userId;
      // Users cannot create or delete their own user doc directly (created on sign-up).
      allow create, delete: if false;
    }

    // PROJECTS
    match /projects/{projectId} {
      // Only project members can read the project document.
      allow read: if isProjectMember(projectId);
      // Creating projects is handled by a server action, not direct client write.
      // Updating/deleting projects can be restricted to owners if needed in the future.
      allow write: if false;
    }

    // PUBLIC COLLECTIONS (Observations, Inspections, PTWs)
    match /{collectionId}/{docId} {
      // Anyone can read a document if its scope is 'public'.
      allow read: if resource.data.scope == 'public';
      // Logged-in users can read their own private documents.
      allow read: if isSignedIn() && resource.data.scope == 'private' && resource.data.userId == request.auth.uid;
      // Allow creation for any logged-in user.
      allow create: if isSignedIn();
      // Only the user who created a document can update or delete it.
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // SUBCOLLECTIONS WITHIN PROJECTS
    match /projects/{projectId}/{collectionId}/{docId} {
       // Only project members can read, create, update, or delete items within a project.
      allow read, write: if isProjectMember(projectId);
    }
  }
}
