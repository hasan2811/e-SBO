
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check project membership
    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }
    
    // Users can read any profile, but only write to their own.
    // This is needed to display member names/avatars in projects.
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // Project documents
    match /projects/{projectId} {
      // Allow read/list if user is a member. This is key for fetching project lists.
      allow get, list: if request.auth.uid in resource.data.memberUids;
      
      // Allow creation by any authenticated user.
      allow create: if request.auth != null;
      
      // Allow update (like adding/removing members) only by existing members.
      allow update: if isProjectMember(projectId);
      
      // Allow deletion only by the owner.
      allow delete: if request.auth.uid == resource.data.ownerUid;

      // Sub-collections within a project (observations, inspections, ptws)
      match /{itemCollection}/{itemId} {
        // Allow full access to project members for all items within their project.
        allow read, write, delete: if isProjectMember(projectId);
      }
    }

    // Root collections for "private" and "public" scope items
    match /{itemCollection}/{itemId} {
      // Allow read/write for "private" items only by the owner.
      allow get, update, delete: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
      
      // Allow any authenticated user to create their own private documents.
      allow create: if request.auth.uid == request.resource.data.userId && request.resource.data.scope == 'private';
      
      // Allow any user (even unauthenticated) to read documents that are explicitly public.
      allow get, list: if resource.data.scope == 'public';

      // Allow authenticated users to update public documents (for likes, views, etc.)
      allow update: if request.auth != null && resource.data.scope == 'public';
      
      // Allow creation of public documents (e.g., sharing) by any authenticated user.
      allow create: if request.auth != null && request.resource.data.scope == 'public';
    }
  }
}
