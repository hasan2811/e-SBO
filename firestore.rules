
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Super admin UID, has full access everywhere.
    function isSuperAdmin() {
      return request.auth.uid == 'GzR8FeByeKhJ0vZoeo5Zj4M0Ftl2';
    }

    // --- USERS ---
    match /users/{userId} {
      // Users can read their own profile. Admin can read any.
      allow read: if request.auth.uid == userId || isSuperAdmin();
      // Users can create their own profile and update it. Admin can update any.
      allow write: if request.auth.uid == userId || isSuperAdmin();
    }

    // --- PROJECTS ---
    match /projects/{projectId} {
      // READ: This is the critical fix. Allow ANY authenticated user to read
      // the project list. The client-side query is responsible for filtering
      // which projects are actually shown (admin sees all, member sees theirs).
      // This solves the "permission-denied" on the main project query.
      allow read: if request.auth != null;
      
      // WRITE: Only the super admin can create, update, or delete projects.
      allow write: if isSuperAdmin();
    }

    // --- ALL OTHER COLLECTIONS (Observations, Inspections, PTWs) ---
    match /{collection}/{docId} {
      // This rule applies to 'observations', 'inspections', 'ptws'.
      
      // READ:
      // Allow if:
      // 1. Super Admin.
      // 2. The item is public.
      // 3. The user owns the private item.
      // 4. The user is a member of the project the item belongs to.
      allow read: if isSuperAdmin() ||
                     resource.data.scope == 'public' ||
                     (resource.data.scope == 'private' && resource.data.userId == request.auth.uid) ||
                     (resource.data.scope == 'project' && request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.memberUids);

      // WRITE (Create, Update):
      // Allow if:
      // 1. Super Admin.
      // 2. The user is creating a new item for themselves.
      // 3. The user is updating an item they own.
      allow write: if isSuperAdmin() ||
                      (request.method == 'create' && request.resource.data.userId == request.auth.uid) ||
                      (request.method == 'update' && resource.data.userId == request.auth.uid);
    }
  }
}
