
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================

    // Returns true if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Returns true if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Returns true if the user is a member of a specific project
    function isProjectMember(projectId) {
      // The user's UID must exist in the `memberUids` array of the project document.
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }


    // =================================
    // Collection Rules
    // =================================

    // Rule: User Profiles
    // Users can read/update their own profile.
    // Any authenticated user can list users to find their UID for invites.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow list: if isSignedIn();
    }

    // Rule: Root Data Collections (for public and private items)
    // Covers observations, inspections, and ptws at the top level.
    match /{collectionName}/{docId} where collectionName in ['observations', 'inspections', 'ptws'] {
      // Read: Anyone can read public items. Owners can read their private items.
      allow read: if resource.data.scope == 'public' || (resource.data.scope == 'private' && isOwner(resource.data.userId));
      
      // Create: Any signed-in user can create an item.
      allow create: if isSignedIn();

      // Update, Delete: Only the owner of the item can modify or delete it.
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Rule: Project Documents
    match /projects/{projectId} {
      // Read: Only members of the project can read its details.
      allow read: if isProjectMember(projectId);

      // Create: Any signed-in user can create a new project document.
      allow create: if isSignedIn();
      
      // Update, Delete: For simplicity and security, only the project's original owner can modify or delete the project document itself.
      allow update, delete: if isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data.ownerUid);
    }

    // Rule: Project Sub-Collections (Data within a project)
    match /projects/{projectId}/{subcollection}/{itemId}
      where subcollection in ['observations', 'inspections', 'ptws'] {
        // Read, Write, Update, Delete: Any member of the project can perform any action on items within that project.
        allow read, write: if isProjectMember(projectId);
    }
  }
}
