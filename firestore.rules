rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and modify their own profile document.
    match /users/{userId} {
      allow read, update, create: if request.auth != null && request.auth.uid == userId;
    }

    // --- Helper Functions ---

    // A user can read any document that is public, OR any document they own.
    // This single rule covers both the public feed query and the private feed query.
    function canRead(docData) {
      return request.auth != null && (docData.userId == request.auth.uid || docData.scope == 'public');
    }
    
    // A user can only write/modify a document they own.
    function isOwner(docData) {
      return request.auth != null && docData.userId == request.auth.uid;
    }
    
    // --- Collection Rules ---
    
    match /observations/{docId} {
      allow read: if canRead(resource.data);
      allow create: if request.auth != null; // Any authenticated user can create.
      allow update, delete: if isOwner(resource.data);
    }

    match /inspections/{docId} {
      allow read: if canRead(resource.data);
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data);
    }

    match /ptws/{docId} {
      allow read: if canRead(resource.data);
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data);
    }
  }
}
