
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(doc) {
      return request.auth != null && request.auth.uid == doc.userId;
    }
    
    function isPublic(doc) {
      // A document is considered public if its scope is explicitly 'public'.
      // Checking for the key's existence first makes the rule robust against older data
      // that might be missing the 'scope' field, preventing permission errors.
      return doc.keys().has('scope') && doc.scope == 'public';
    }

    // --- USER DATA ---
    // Users can read their own profile.
    // Users can only create their own profile.
    // Users can only update their own display name and position.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId
                      && request.resource.data.keys().hasOnly(['displayName', 'position']);
    }

    // --- PROJECTS ---
    // Anyone authenticated can create a project. The createProject server action validates ownership.
    // Only members can read project details.
    // Only the owner can update the project (e.g., name, members).
    // Deleting projects is disallowed for safety.
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid in resource.data.memberUids;
      allow update: if request.auth != null && request.auth.uid == resource.data.ownerUid;
      allow delete: if false;

      // Project Subcollections (Observations, Inspections, PTWs)
      // Any member of the project can create, read, update, or delete items within that project.
      match /{collection}/{docId} {
         allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
      }
    }

    // --- PUBLIC & PRIVATE ROOT COLLECTIONS ---

    // Observations
    match /observations/{obsId} {
      allow read: if isPublic(resource.data) || isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow update: if isOwner(resource.data);
      allow delete: if isOwner(resource.data);
    }

    // Inspections
    match /inspections/{inspId} {
      allow read: if isPublic(resource.data) || isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow update: if isOwner(resource.data);
      allow delete: if isOwner(resource.data);
    }

    // PTWs
    match /ptws/{ptwId} {
      allow read: if isPublic(resource.data) || isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow update: if isOwner(resource.data);
      allow delete: if isOwner(resource.data);
    }
  }
}
