
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read any profile, but only update their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Project metadata can be read by members, but only modified by the owner.
    match /projects/{projectId} {
      function isMember() {
        return request.auth.uid in resource.data.memberUids;
      }
      function isOwner() {
        return request.auth.uid == resource.data.ownerUid;
      }
      
      allow read: if request.auth != null && isMember();
      allow create: if request.auth != null; // Server-side actions handle validation
      allow update, delete: if request.auth != null && isOwner();

      // Rules for sub-collections within a project (observations, inspections, ptws)
      // Only project members can access items within the project.
      match /{itemCollection}/{itemId} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
      }
    }

    // Rules for root collections (Private and Public items ONLY)
    match /observations/{observationId} {
      allow create: if request.auth.uid == request.resource.data.userId && request.resource.data.scope != 'project';
      allow read: if resource.data.scope == 'public' || (request.auth.uid == resource.data.userId && resource.data.scope == 'private');
      allow update, delete: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
    }

    match /inspections/{inspectionId} {
      allow create: if request.auth.uid == request.resource.data.userId && request.resource.data.scope != 'project';
      allow read: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
      allow update, delete: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
    }

    match /ptws/{ptwId} {
      allow create: if request.auth.uid == request.resource.data.userId && request.resource.data.scope != 'project';
      allow read: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
      allow update, delete: if request.auth.uid == resource.data.userId && resource.data.scope == 'private';
    }
  }
}
