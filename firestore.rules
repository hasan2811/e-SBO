
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
    }

    match /projects/{projectId} {
      // This is the key fix: Making the read rule robust against malformed data.
      // It checks for the existence of the 'memberUids' field before checking for membership.
      allow read: if 'memberUids' in resource.data && request.auth.uid in resource.data.memberUids;

      // Only the project owner can update or delete.
      allow update, delete: if request.auth.uid == resource.data.ownerUid;
      
      // Creation is now manual, but the rule is here for future use.
      allow create: if request.auth != null;
    }

    // Rules for Observations
    match /observations/{observationId} {
      // Anyone can read public observations.
      // Authenticated users can read non-public observations for now. This can be tightened later.
      allow read: if resource.data.scope == 'public' || request.auth != null;
      
      // Allow create for any authenticated user.
      allow create: if request.auth != null;
      
      // Only allow the user who created the document to update or delete it.
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Simplified, secure rules for Inspections and PTWs
    match /inspections/{inspectionId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    match /ptws/{ptwId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
