
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isProjectMember(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /projects/{projectId} {
      allow read: if isProjectMember(projectId);
      allow update: if request.auth.uid == resource.data.ownerUid;
      allow create: if request.auth.uid == request.resource.data.ownerUid &&
                       request.auth.uid in request.resource.data.memberUids;
    }

    match /{itemCollection}/{itemId} {
      allow read: if resource.data.scope == 'public' || 
                     (resource.data.scope == 'private' && resource.data.userId == request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if resource.data.userId == request.auth.uid;
    }
    
    match /projects/{projectId}/{itemCollection}/{itemId} {
       allow read: if isProjectMember(projectId);
       allow create: if isProjectMember(projectId) && request.auth.uid == request.resource.data.userId;
       allow update, delete: if isProjectMember(projectId) && resource.data.userId == request.auth.uid;
    }
  }
}
