
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /projects/{projectId} {
      allow read: if request.auth.uid in resource.data.memberUids;
      allow create: if request.auth != null && 
                     request.resource.data.ownerUid == request.auth.uid &&
                     request.resource.data.memberUids == [request.auth.uid];
      allow update: if request.auth.uid == resource.data.ownerUid; // Owner can add/remove members
      allow delete: if request.auth.uid == resource.data.ownerUid;

      match /{itemCollection}/{itemId} {
        allow read: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
        allow create: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
        allow update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerUid;
      }
    }
    
    match /{itemCollection}/{itemId} {
        allow read: if request.auth != null && (resource.data.scope == 'public' || resource.data.userId == request.auth.uid);
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
