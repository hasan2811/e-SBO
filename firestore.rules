
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Authenticated users can read/list user profiles to enable invites by email.
    // - Users can only write to their own document.
    match /users/{userId} {
      allow read, list: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Projects:
    // - A user can read a project document if they are a member.
    // - Any authenticated user can create a project.
    // - Only the owner can update a project.
    match /projects/{projectId} {
      allow read: if request.auth.uid in resource.data.memberUids;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.ownerUid;
      allow delete: if false; // Deleting projects is not allowed.
    }

    // A function to check read access for items (observations, inspections, ptws).
    function canReadItem(item) {
      return item.scope == 'public' ||
             (request.auth != null && (
               (item.scope == 'private' && request.auth.uid == item.userId) ||
               (item.scope == 'project' && item.projectId != null && request.auth.uid in get(/databases/$(database)/documents/projects/$(item.projectId)).data.memberUids)
             ));
    }

    // Observations
    match /observations/{obsId} {
      allow read: if canReadItem(resource.data);
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if false;
    }

    // Inspections
    match /inspections/{inspId} {
      allow read: if canReadItem(resource.data);
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if false;
    }
    
    // Permits to Work (PTW)
    match /ptws/{ptwId} {
      allow read: if canReadItem(resource.data);
      allow create: if request.auth != null;
      // Allow updates from any authenticated user to handle approvals.
      // In a real-world scenario, this would be more locked down (e.g., to project managers).
      allow update: if request.auth != null;
      allow delete: if false;
    }
  }
}
