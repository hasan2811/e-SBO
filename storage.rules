rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Project files: Accessible only by members of that project.
    // The path contains the projectId, which we use to look up project data in Firestore.
    match /projects/{projectId}/{allPaths=**} {
      allow read, write: if request.auth != null 
                         && exists(/databases/$(database)/documents/projects/$(projectId))
                         && request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.memberUids;
    }

    // User-specific private files (observations, inspections, etc.).
    // The path contains the userId.
    match /{path}/{userId}/{allPaths=**} {
      // Any authenticated user can read files. This is necessary for public posts,
      // where the image URL might point to a file in another user's folder.
      allow read: if request.auth != null;
      
      // Only the owner of the folder can write (upload/delete) files.
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
