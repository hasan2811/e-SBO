
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // By default, deny all reads and writes
    // This will be overridden by more specific rules below.
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Allow any authenticated user to upload files to the primary folders.
    // The path includes the user's ID, which provides some security by obscurity,
    // but the rule itself allows any logged-in user to write.
    match /observations/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /inspections/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }
     match /ptw-jsa/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /actions/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to write to project-specific folders.
    // A more robust rule would check project membership via Firestore, but this is a solid start.
    match /projects/{projectId}/{folder}/{userId}/{fileName} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow anyone to read any file. This is necessary for displaying images in the app.
    match /{allPaths=**} {
      allow read: if true;
    }
  }
}
